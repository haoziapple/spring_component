<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.haozi.springdemo</groupId>
	<artifactId>file-service</artifactId>
	<version>1.0.1</version>
	<!-- <packaging>jar</packaging> -->
	<packaging>war</packaging>

	<name>file-service</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.2.RELEASE</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- swagger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.2.2</version>
		</dependency>
		<!-- 日志输出到redis -->
		<dependency>
			<groupId>com.cwbase</groupId>
			<artifactId>logback-redis-appender</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- tag::actuator[] -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- end::actuator[] -->
		<!-- tag::spring-boot-admin[] -->
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
			<version>1.3.2</version>
		</dependency>
		<!-- end::spring-boot-admin -->

		<!-- 用于日期转换 -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/net.coobird/thumbnailator -->
		<!-- image process -->
		<dependency>
			<groupId>net.coobird</groupId>
			<artifactId>thumbnailator</artifactId>
			<version>0.4.8</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.alibaba/simpleimage -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>simpleimage</artifactId>
			<version>1.2.3</version>
		</dependency>

		<!-- Guava: Google Core Libraries for Java -->
		<!-- swagger中已经引入18.0版本，被此23.0版本覆盖后，项目启动会报错：jdk版本问题 -->
		<!-- <dependency> -->
		<!-- <groupId>com.google.guava</groupId> -->
		<!-- <artifactId>guava</artifactId> -->
		<!-- <version>23.0</version> -->
		<!-- </dependency> -->

		<!-- https://mvnrepository.com/artifact/javax.media/jai_core -->
		<!-- simpleimage需要引入jai扩展，jar包比较麻烦(待完成) -->
		<!-- <dependency> -->
		<!-- <groupId>javax.media</groupId> -->
		<!-- <artifactId>jai_core</artifactId> -->
		<!-- <version>1.1.3</version> -->
		<!-- </dependency> -->
	</dependencies>

	<build>
		<finalName>file</finalName>
		<plugins>
			<!-- springboot maven 打包 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- 使用java1.7和UTF-8编码 -->
			<!-- we want sources to be processed by a specific 1.8 javac -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source><!-- 源代码使用的开发版本 -->
					<target>1.8</target><!-- 需要生成的目标class文件的编译版本 -->
					<!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中需要没有使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->
					<encoding>UTF-8</encoding>
					<verbose>true</verbose>
					<fork>true</fork><!-- fork is enable,用于明确表示编译版本配置的可用 -->
					<executable>${JAVA_HOME}/bin/javac</executable>
				</configuration>
			</plugin>
			<!-- 打包跳过测试 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- <skipTests>true</skipTests> -->
					<runOrder>random</runOrder>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- <repositories> <repository> <id>nexus</id> <name>Team Nexus Repository</name> 
		<url>http://10.108.26.220:8081/nexus/content/groups/public</url> <snapshots> 
		<enabled>true</enabled> -->
	<!-- always\daily\interval\never -->
	<!-- <updatePolicy>daily</updatePolicy> </snapshots> </repository> </repositories> 
		<pluginRepositories> <pluginRepository> <id>nexus</id> <name>Team Nexus Repository</name> 
		<url>http://10.108.26.220:8081/nexus/content/groups/public</url> </pluginRepository> 
		</pluginRepositories> <distributionManagement> <repository> <id>nexus</id> 
		<name>Team Nexus Repository</name> <url>http://10.108.26.220:8081/nexus/content/repositories/releases</url> 
		</repository> <snapshotRepository> <id>nexus-snapshot</id> <name>Team Nexus 
		Snapshot Repository</name> <url>http://10.108.26.220:8081/nexus/content/repositories/snapshots</url> 
		</snapshotRepository> </distributionManagement> -->
</project>
